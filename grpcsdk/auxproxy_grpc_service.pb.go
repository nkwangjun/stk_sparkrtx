// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.3
// source: auxproxy_grpc_service.proto

package grpcsdk

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 游戏进程ProcessReady 调用
type ProcessReadyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogPathsToUpload []string `protobuf:"bytes,1,rep,name=logPathsToUpload,proto3" json:"logPathsToUpload,omitempty"`
	ClientPort       int32    `protobuf:"varint,2,opt,name=clientPort,proto3" json:"clientPort,omitempty"`
	GrpcPort         int32    `protobuf:"varint,3,opt,name=grpcPort,proto3" json:"grpcPort,omitempty"`
	Pid              int32    `protobuf:"varint,4,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *ProcessReadyRequest) Reset() {
	*x = ProcessReadyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auxproxy_grpc_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessReadyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessReadyRequest) ProtoMessage() {}

func (x *ProcessReadyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auxproxy_grpc_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessReadyRequest.ProtoReflect.Descriptor instead.
func (*ProcessReadyRequest) Descriptor() ([]byte, []int) {
	return file_auxproxy_grpc_service_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessReadyRequest) GetLogPathsToUpload() []string {
	if x != nil {
		return x.LogPathsToUpload
	}
	return nil
}

func (x *ProcessReadyRequest) GetClientPort() int32 {
	if x != nil {
		return x.ClientPort
	}
	return 0
}

func (x *ProcessReadyRequest) GetGrpcPort() int32 {
	if x != nil {
		return x.GrpcPort
	}
	return 0
}

func (x *ProcessReadyRequest) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

// 游戏进程在收到GSE的启动游戏会话后需要调用
type ActivateGameServerSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameServerSessionId string `protobuf:"bytes,1,opt,name=gameServerSessionId,proto3" json:"gameServerSessionId,omitempty"`
	MaxPlayers          int32  `protobuf:"varint,2,opt,name=maxPlayers,proto3" json:"maxPlayers,omitempty"`
}

func (x *ActivateGameServerSessionRequest) Reset() {
	*x = ActivateGameServerSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auxproxy_grpc_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateGameServerSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateGameServerSessionRequest) ProtoMessage() {}

func (x *ActivateGameServerSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auxproxy_grpc_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateGameServerSessionRequest.ProtoReflect.Descriptor instead.
func (*ActivateGameServerSessionRequest) Descriptor() ([]byte, []int) {
	return file_auxproxy_grpc_service_proto_rawDescGZIP(), []int{1}
}

func (x *ActivateGameServerSessionRequest) GetGameServerSessionId() string {
	if x != nil {
		return x.GameServerSessionId
	}
	return ""
}

func (x *ActivateGameServerSessionRequest) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

// 游戏进程在玩家加入后调用
type AcceptPlayerSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameServerSessionId string `protobuf:"bytes,1,opt,name=gameServerSessionId,proto3" json:"gameServerSessionId,omitempty"`
	PlayerSessionId     string `protobuf:"bytes,2,opt,name=playerSessionId,proto3" json:"playerSessionId,omitempty"`
}

func (x *AcceptPlayerSessionRequest) Reset() {
	*x = AcceptPlayerSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auxproxy_grpc_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptPlayerSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptPlayerSessionRequest) ProtoMessage() {}

func (x *AcceptPlayerSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auxproxy_grpc_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptPlayerSessionRequest.ProtoReflect.Descriptor instead.
func (*AcceptPlayerSessionRequest) Descriptor() ([]byte, []int) {
	return file_auxproxy_grpc_service_proto_rawDescGZIP(), []int{2}
}

func (x *AcceptPlayerSessionRequest) GetGameServerSessionId() string {
	if x != nil {
		return x.GameServerSessionId
	}
	return ""
}

func (x *AcceptPlayerSessionRequest) GetPlayerSessionId() string {
	if x != nil {
		return x.PlayerSessionId
	}
	return ""
}

// 游戏进程在玩家移除后调用
type RemovePlayerSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameServerSessionId string `protobuf:"bytes,1,opt,name=gameServerSessionId,proto3" json:"gameServerSessionId,omitempty"`
	PlayerSessionId     string `protobuf:"bytes,2,opt,name=playerSessionId,proto3" json:"playerSessionId,omitempty"`
}

func (x *RemovePlayerSessionRequest) Reset() {
	*x = RemovePlayerSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auxproxy_grpc_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePlayerSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePlayerSessionRequest) ProtoMessage() {}

func (x *RemovePlayerSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auxproxy_grpc_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePlayerSessionRequest.ProtoReflect.Descriptor instead.
func (*RemovePlayerSessionRequest) Descriptor() ([]byte, []int) {
	return file_auxproxy_grpc_service_proto_rawDescGZIP(), []int{3}
}

func (x *RemovePlayerSessionRequest) GetGameServerSessionId() string {
	if x != nil {
		return x.GameServerSessionId
	}
	return ""
}

func (x *RemovePlayerSessionRequest) GetPlayerSessionId() string {
	if x != nil {
		return x.PlayerSessionId
	}
	return ""
}

// 玩家信息
type PlayerSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerSessionId     string `protobuf:"bytes,1,opt,name=playerSessionId,proto3" json:"playerSessionId,omitempty"`
	PlayerId            string `protobuf:"bytes,2,opt,name=playerId,proto3" json:"playerId,omitempty"`
	GameServerSessionId string `protobuf:"bytes,3,opt,name=gameServerSessionId,proto3" json:"gameServerSessionId,omitempty"`
	FleetId             string `protobuf:"bytes,4,opt,name=fleetId,proto3" json:"fleetId,omitempty"`
	IpAddress           string `protobuf:"bytes,5,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	Status              string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	CreationTime        int64  `protobuf:"varint,7,opt,name=creationTime,proto3" json:"creationTime,omitempty"`
	TerminationTime     int64  `protobuf:"varint,8,opt,name=terminationTime,proto3" json:"terminationTime,omitempty"`
	Port                int32  `protobuf:"varint,9,opt,name=port,proto3" json:"port,omitempty"`
	PlayerData          string `protobuf:"bytes,10,opt,name=playerData,proto3" json:"playerData,omitempty"`
	DnsName             string `protobuf:"bytes,11,opt,name=dnsName,proto3" json:"dnsName,omitempty"`
}

func (x *PlayerSession) Reset() {
	*x = PlayerSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auxproxy_grpc_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerSession) ProtoMessage() {}

func (x *PlayerSession) ProtoReflect() protoreflect.Message {
	mi := &file_auxproxy_grpc_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerSession.ProtoReflect.Descriptor instead.
func (*PlayerSession) Descriptor() ([]byte, []int) {
	return file_auxproxy_grpc_service_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerSession) GetPlayerSessionId() string {
	if x != nil {
		return x.PlayerSessionId
	}
	return ""
}

func (x *PlayerSession) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerSession) GetGameServerSessionId() string {
	if x != nil {
		return x.GameServerSessionId
	}
	return ""
}

func (x *PlayerSession) GetFleetId() string {
	if x != nil {
		return x.FleetId
	}
	return ""
}

func (x *PlayerSession) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *PlayerSession) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PlayerSession) GetCreationTime() int64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

func (x *PlayerSession) GetTerminationTime() int64 {
	if x != nil {
		return x.TerminationTime
	}
	return 0
}

func (x *PlayerSession) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *PlayerSession) GetPlayerData() string {
	if x != nil {
		return x.PlayerData
	}
	return ""
}

func (x *PlayerSession) GetDnsName() string {
	if x != nil {
		return x.DnsName
	}
	return ""
}

// 游戏进程获取玩家信息
type DescribePlayerSessionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameServerSessionId       string `protobuf:"bytes,1,opt,name=gameServerSessionId,proto3" json:"gameServerSessionId,omitempty"`
	PlayerId                  string `protobuf:"bytes,2,opt,name=playerId,proto3" json:"playerId,omitempty"`
	PlayerSessionId           string `protobuf:"bytes,3,opt,name=playerSessionId,proto3" json:"playerSessionId,omitempty"`
	PlayerSessionStatusFilter string `protobuf:"bytes,4,opt,name=playerSessionStatusFilter,proto3" json:"playerSessionStatusFilter,omitempty"`
	NextToken                 string `protobuf:"bytes,5,opt,name=nextToken,proto3" json:"nextToken,omitempty"`
	Limit                     int32  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *DescribePlayerSessionsRequest) Reset() {
	*x = DescribePlayerSessionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auxproxy_grpc_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribePlayerSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribePlayerSessionsRequest) ProtoMessage() {}

func (x *DescribePlayerSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auxproxy_grpc_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribePlayerSessionsRequest.ProtoReflect.Descriptor instead.
func (*DescribePlayerSessionsRequest) Descriptor() ([]byte, []int) {
	return file_auxproxy_grpc_service_proto_rawDescGZIP(), []int{5}
}

func (x *DescribePlayerSessionsRequest) GetGameServerSessionId() string {
	if x != nil {
		return x.GameServerSessionId
	}
	return ""
}

func (x *DescribePlayerSessionsRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *DescribePlayerSessionsRequest) GetPlayerSessionId() string {
	if x != nil {
		return x.PlayerSessionId
	}
	return ""
}

func (x *DescribePlayerSessionsRequest) GetPlayerSessionStatusFilter() string {
	if x != nil {
		return x.PlayerSessionStatusFilter
	}
	return ""
}

func (x *DescribePlayerSessionsRequest) GetNextToken() string {
	if x != nil {
		return x.NextToken
	}
	return ""
}

func (x *DescribePlayerSessionsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type DescribePlayerSessionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextToken      string           `protobuf:"bytes,1,opt,name=nextToken,proto3" json:"nextToken,omitempty"`
	PlayerSessions []*PlayerSession `protobuf:"bytes,2,rep,name=playerSessions,proto3" json:"playerSessions,omitempty"`
}

func (x *DescribePlayerSessionsResponse) Reset() {
	*x = DescribePlayerSessionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auxproxy_grpc_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribePlayerSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribePlayerSessionsResponse) ProtoMessage() {}

func (x *DescribePlayerSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auxproxy_grpc_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribePlayerSessionsResponse.ProtoReflect.Descriptor instead.
func (*DescribePlayerSessionsResponse) Descriptor() ([]byte, []int) {
	return file_auxproxy_grpc_service_proto_rawDescGZIP(), []int{6}
}

func (x *DescribePlayerSessionsResponse) GetNextToken() string {
	if x != nil {
		return x.NextToken
	}
	return ""
}

func (x *DescribePlayerSessionsResponse) GetPlayerSessions() []*PlayerSession {
	if x != nil {
		return x.PlayerSessions
	}
	return nil
}

// 游戏进程更新玩家加入策略
type UpdatePlayerSessionCreationPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameServerSessionId            string `protobuf:"bytes,1,opt,name=gameServerSessionId,proto3" json:"gameServerSessionId,omitempty"`
	NewPlayerSessionCreationPolicy string `protobuf:"bytes,2,opt,name=newPlayerSessionCreationPolicy,proto3" json:"newPlayerSessionCreationPolicy,omitempty"`
}

func (x *UpdatePlayerSessionCreationPolicyRequest) Reset() {
	*x = UpdatePlayerSessionCreationPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auxproxy_grpc_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlayerSessionCreationPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlayerSessionCreationPolicyRequest) ProtoMessage() {}

func (x *UpdatePlayerSessionCreationPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auxproxy_grpc_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlayerSessionCreationPolicyRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlayerSessionCreationPolicyRequest) Descriptor() ([]byte, []int) {
	return file_auxproxy_grpc_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePlayerSessionCreationPolicyRequest) GetGameServerSessionId() string {
	if x != nil {
		return x.GameServerSessionId
	}
	return ""
}

func (x *UpdatePlayerSessionCreationPolicyRequest) GetNewPlayerSessionCreationPolicy() string {
	if x != nil {
		return x.NewPlayerSessionCreationPolicy
	}
	return ""
}

// 游戏进程在结束游戏会话后调用
type TerminateGameServerSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameServerSessionId string `protobuf:"bytes,1,opt,name=gameServerSessionId,proto3" json:"gameServerSessionId,omitempty"`
}

func (x *TerminateGameServerSessionRequest) Reset() {
	*x = TerminateGameServerSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auxproxy_grpc_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateGameServerSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateGameServerSessionRequest) ProtoMessage() {}

func (x *TerminateGameServerSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auxproxy_grpc_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateGameServerSessionRequest.ProtoReflect.Descriptor instead.
func (*TerminateGameServerSessionRequest) Descriptor() ([]byte, []int) {
	return file_auxproxy_grpc_service_proto_rawDescGZIP(), []int{8}
}

func (x *TerminateGameServerSessionRequest) GetGameServerSessionId() string {
	if x != nil {
		return x.GameServerSessionId
	}
	return ""
}

// 游戏进程在退出时调用
type ProcessEndingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid int32 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *ProcessEndingRequest) Reset() {
	*x = ProcessEndingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auxproxy_grpc_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessEndingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessEndingRequest) ProtoMessage() {}

func (x *ProcessEndingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auxproxy_grpc_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessEndingRequest.ProtoReflect.Descriptor instead.
func (*ProcessEndingRequest) Descriptor() ([]byte, []int) {
	return file_auxproxy_grpc_service_proto_rawDescGZIP(), []int{9}
}

func (x *ProcessEndingRequest) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

// 上报自定义数据
type ReportCustomDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentCustomCount int32 `protobuf:"varint,1,opt,name=currentCustomCount,proto3" json:"currentCustomCount,omitempty"`
	MaxCustomCount     int32 `protobuf:"varint,2,opt,name=maxCustomCount,proto3" json:"maxCustomCount,omitempty"`
}

func (x *ReportCustomDataRequest) Reset() {
	*x = ReportCustomDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auxproxy_grpc_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportCustomDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportCustomDataRequest) ProtoMessage() {}

func (x *ReportCustomDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auxproxy_grpc_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportCustomDataRequest.ProtoReflect.Descriptor instead.
func (*ReportCustomDataRequest) Descriptor() ([]byte, []int) {
	return file_auxproxy_grpc_service_proto_rawDescGZIP(), []int{10}
}

func (x *ReportCustomDataRequest) GetCurrentCustomCount() int32 {
	if x != nil {
		return x.CurrentCustomCount
	}
	return 0
}

func (x *ReportCustomDataRequest) GetMaxCustomCount() int32 {
	if x != nil {
		return x.MaxCustomCount
	}
	return 0
}

// 返回结果，成功与否看rpc错误码
type AuxProxyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuxProxyResponse) Reset() {
	*x = AuxProxyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auxproxy_grpc_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuxProxyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuxProxyResponse) ProtoMessage() {}

func (x *AuxProxyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auxproxy_grpc_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuxProxyResponse.ProtoReflect.Descriptor instead.
func (*AuxProxyResponse) Descriptor() ([]byte, []int) {
	return file_auxproxy_grpc_service_proto_rawDescGZIP(), []int{11}
}

var File_auxproxy_grpc_service_proto protoreflect.FileDescriptor

var file_auxproxy_grpc_service_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x75, 0x78, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x61,
	0x75, 0x78, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x8f,
	0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x6f, 0x67, 0x50, 0x61, 0x74,
	0x68, 0x73, 0x54, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x10, 0x6c, 0x6f, 0x67, 0x50, 0x61, 0x74, 0x68, 0x73, 0x54, 0x6f, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x67, 0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x69, 0x64,
	0x22, 0x74, 0x0a, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x78, 0x0a, 0x1a, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x78, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x13, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x67, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xf3, 0x02, 0x0a, 0x0d, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6e, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x89, 0x02, 0x0a, 0x1d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x19, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x86, 0x01, 0x0a,
	0x1e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x46, 0x0a,
	0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x75, 0x78, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x28, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x1e, 0x6e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x6e, 0x65,
	0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x55, 0x0a, 0x21,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x13, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x69, 0x64, 0x22, 0x71, 0x0a,
	0x17, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x6d, 0x61, 0x78, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x12, 0x0a, 0x10, 0x41, 0x75, 0x78, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0xef, 0x07, 0x0a, 0x11, 0x47, 0x73, 0x65, 0x47, 0x72, 0x70, 0x63,
	0x53, 0x64, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x24, 0x2e, 0x61, 0x75, 0x78,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x61, 0x75, 0x78, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x41, 0x75, 0x78, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x19, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x31, 0x2e, 0x61, 0x75, 0x78, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x75, 0x78, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x75, 0x78, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x13, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2b, 0x2e, 0x61, 0x75, 0x78, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x61, 0x75, 0x78, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x41, 0x75, 0x78, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x61, 0x75, 0x78,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x75, 0x78, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x75, 0x78, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x16,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x2e, 0x61, 0x75, 0x78, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x61, 0x75, 0x78, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x21, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x39, 0x2e, 0x61, 0x75, 0x78, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x75, 0x78,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x75, 0x78,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x75, 0x0a, 0x1a, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x2e,
	0x61, 0x75, 0x78, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x61, 0x75, 0x78, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x41, 0x75, 0x78, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x2e, 0x61, 0x75, 0x78, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x61, 0x75, 0x78, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x41, 0x75, 0x78, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x2e, 0x61, 0x75, 0x78, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x61, 0x75, 0x78, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x41, 0x75, 0x78, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x67, 0x6f, 0x2d, 0x64, 0x65, 0x6d,
	0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x73, 0x64, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_auxproxy_grpc_service_proto_rawDescOnce sync.Once
	file_auxproxy_grpc_service_proto_rawDescData = file_auxproxy_grpc_service_proto_rawDesc
)

func file_auxproxy_grpc_service_proto_rawDescGZIP() []byte {
	file_auxproxy_grpc_service_proto_rawDescOnce.Do(func() {
		file_auxproxy_grpc_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_auxproxy_grpc_service_proto_rawDescData)
	})
	return file_auxproxy_grpc_service_proto_rawDescData
}

var file_auxproxy_grpc_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_auxproxy_grpc_service_proto_goTypes = []interface{}{
	(*ProcessReadyRequest)(nil),                      // 0: auxproxyService.ProcessReadyRequest
	(*ActivateGameServerSessionRequest)(nil),         // 1: auxproxyService.ActivateGameServerSessionRequest
	(*AcceptPlayerSessionRequest)(nil),               // 2: auxproxyService.AcceptPlayerSessionRequest
	(*RemovePlayerSessionRequest)(nil),               // 3: auxproxyService.RemovePlayerSessionRequest
	(*PlayerSession)(nil),                            // 4: auxproxyService.PlayerSession
	(*DescribePlayerSessionsRequest)(nil),            // 5: auxproxyService.DescribePlayerSessionsRequest
	(*DescribePlayerSessionsResponse)(nil),           // 6: auxproxyService.DescribePlayerSessionsResponse
	(*UpdatePlayerSessionCreationPolicyRequest)(nil), // 7: auxproxyService.UpdatePlayerSessionCreationPolicyRequest
	(*TerminateGameServerSessionRequest)(nil),        // 8: auxproxyService.TerminateGameServerSessionRequest
	(*ProcessEndingRequest)(nil),                     // 9: auxproxyService.ProcessEndingRequest
	(*ReportCustomDataRequest)(nil),                  // 10: auxproxyService.ReportCustomDataRequest
	(*AuxProxyResponse)(nil),                         // 11: auxproxyService.AuxProxyResponse
}
var file_auxproxy_grpc_service_proto_depIdxs = []int32{
	4,  // 0: auxproxyService.DescribePlayerSessionsResponse.playerSessions:type_name -> auxproxyService.PlayerSession
	0,  // 1: auxproxyService.GseGrpcSdkService.ProcessReady:input_type -> auxproxyService.ProcessReadyRequest
	1,  // 2: auxproxyService.GseGrpcSdkService.ActivateGameServerSession:input_type -> auxproxyService.ActivateGameServerSessionRequest
	2,  // 3: auxproxyService.GseGrpcSdkService.AcceptPlayerSession:input_type -> auxproxyService.AcceptPlayerSessionRequest
	3,  // 4: auxproxyService.GseGrpcSdkService.RemovePlayerSession:input_type -> auxproxyService.RemovePlayerSessionRequest
	5,  // 5: auxproxyService.GseGrpcSdkService.DescribePlayerSessions:input_type -> auxproxyService.DescribePlayerSessionsRequest
	7,  // 6: auxproxyService.GseGrpcSdkService.UpdatePlayerSessionCreationPolicy:input_type -> auxproxyService.UpdatePlayerSessionCreationPolicyRequest
	8,  // 7: auxproxyService.GseGrpcSdkService.TerminateGameServerSession:input_type -> auxproxyService.TerminateGameServerSessionRequest
	9,  // 8: auxproxyService.GseGrpcSdkService.ProcessEnding:input_type -> auxproxyService.ProcessEndingRequest
	10, // 9: auxproxyService.GseGrpcSdkService.ReportCustomData:input_type -> auxproxyService.ReportCustomDataRequest
	11, // 10: auxproxyService.GseGrpcSdkService.ProcessReady:output_type -> auxproxyService.AuxProxyResponse
	11, // 11: auxproxyService.GseGrpcSdkService.ActivateGameServerSession:output_type -> auxproxyService.AuxProxyResponse
	11, // 12: auxproxyService.GseGrpcSdkService.AcceptPlayerSession:output_type -> auxproxyService.AuxProxyResponse
	11, // 13: auxproxyService.GseGrpcSdkService.RemovePlayerSession:output_type -> auxproxyService.AuxProxyResponse
	6,  // 14: auxproxyService.GseGrpcSdkService.DescribePlayerSessions:output_type -> auxproxyService.DescribePlayerSessionsResponse
	11, // 15: auxproxyService.GseGrpcSdkService.UpdatePlayerSessionCreationPolicy:output_type -> auxproxyService.AuxProxyResponse
	11, // 16: auxproxyService.GseGrpcSdkService.TerminateGameServerSession:output_type -> auxproxyService.AuxProxyResponse
	11, // 17: auxproxyService.GseGrpcSdkService.ProcessEnding:output_type -> auxproxyService.AuxProxyResponse
	11, // 18: auxproxyService.GseGrpcSdkService.ReportCustomData:output_type -> auxproxyService.AuxProxyResponse
	10, // [10:19] is the sub-list for method output_type
	1,  // [1:10] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_auxproxy_grpc_service_proto_init() }
func file_auxproxy_grpc_service_proto_init() {
	if File_auxproxy_grpc_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_auxproxy_grpc_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessReadyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auxproxy_grpc_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateGameServerSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auxproxy_grpc_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptPlayerSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auxproxy_grpc_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePlayerSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auxproxy_grpc_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auxproxy_grpc_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribePlayerSessionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auxproxy_grpc_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribePlayerSessionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auxproxy_grpc_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlayerSessionCreationPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auxproxy_grpc_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateGameServerSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auxproxy_grpc_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessEndingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auxproxy_grpc_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportCustomDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auxproxy_grpc_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuxProxyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auxproxy_grpc_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_auxproxy_grpc_service_proto_goTypes,
		DependencyIndexes: file_auxproxy_grpc_service_proto_depIdxs,
		MessageInfos:      file_auxproxy_grpc_service_proto_msgTypes,
	}.Build()
	File_auxproxy_grpc_service_proto = out.File
	file_auxproxy_grpc_service_proto_rawDesc = nil
	file_auxproxy_grpc_service_proto_goTypes = nil
	file_auxproxy_grpc_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GseGrpcSdkServiceClient is the client API for GseGrpcSdkService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GseGrpcSdkServiceClient interface {
	// 上报游戏进程已经就绪
	ProcessReady(ctx context.Context, in *ProcessReadyRequest, opts ...grpc.CallOption) (*AuxProxyResponse, error)
	// 激活游戏会话
	ActivateGameServerSession(ctx context.Context, in *ActivateGameServerSessionRequest, opts ...grpc.CallOption) (*AuxProxyResponse, error)
	// 玩家加入
	AcceptPlayerSession(ctx context.Context, in *AcceptPlayerSessionRequest, opts ...grpc.CallOption) (*AuxProxyResponse, error)
	// 玩家移除
	RemovePlayerSession(ctx context.Context, in *RemovePlayerSessionRequest, opts ...grpc.CallOption) (*AuxProxyResponse, error)
	// 获取玩家信息
	DescribePlayerSessions(ctx context.Context, in *DescribePlayerSessionsRequest, opts ...grpc.CallOption) (*DescribePlayerSessionsResponse, error)
	// 更新玩家加入策略
	UpdatePlayerSessionCreationPolicy(ctx context.Context, in *UpdatePlayerSessionCreationPolicyRequest, opts ...grpc.CallOption) (*AuxProxyResponse, error)
	// 结束游戏会话
	TerminateGameServerSession(ctx context.Context, in *TerminateGameServerSessionRequest, opts ...grpc.CallOption) (*AuxProxyResponse, error)
	// 结束进程
	ProcessEnding(ctx context.Context, in *ProcessEndingRequest, opts ...grpc.CallOption) (*AuxProxyResponse, error)
	// 上报自定义数据
	ReportCustomData(ctx context.Context, in *ReportCustomDataRequest, opts ...grpc.CallOption) (*AuxProxyResponse, error)
}

type gseGrpcSdkServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGseGrpcSdkServiceClient(cc grpc.ClientConnInterface) GseGrpcSdkServiceClient {
	return &gseGrpcSdkServiceClient{cc}
}

func (c *gseGrpcSdkServiceClient) ProcessReady(ctx context.Context, in *ProcessReadyRequest, opts ...grpc.CallOption) (*AuxProxyResponse, error) {
	out := new(AuxProxyResponse)
	err := c.cc.Invoke(ctx, "/auxproxyService.GseGrpcSdkService/ProcessReady", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gseGrpcSdkServiceClient) ActivateGameServerSession(ctx context.Context, in *ActivateGameServerSessionRequest, opts ...grpc.CallOption) (*AuxProxyResponse, error) {
	out := new(AuxProxyResponse)
	err := c.cc.Invoke(ctx, "/auxproxyService.GseGrpcSdkService/ActivateGameServerSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gseGrpcSdkServiceClient) AcceptPlayerSession(ctx context.Context, in *AcceptPlayerSessionRequest, opts ...grpc.CallOption) (*AuxProxyResponse, error) {
	out := new(AuxProxyResponse)
	err := c.cc.Invoke(ctx, "/auxproxyService.GseGrpcSdkService/AcceptPlayerSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gseGrpcSdkServiceClient) RemovePlayerSession(ctx context.Context, in *RemovePlayerSessionRequest, opts ...grpc.CallOption) (*AuxProxyResponse, error) {
	out := new(AuxProxyResponse)
	err := c.cc.Invoke(ctx, "/auxproxyService.GseGrpcSdkService/RemovePlayerSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gseGrpcSdkServiceClient) DescribePlayerSessions(ctx context.Context, in *DescribePlayerSessionsRequest, opts ...grpc.CallOption) (*DescribePlayerSessionsResponse, error) {
	out := new(DescribePlayerSessionsResponse)
	err := c.cc.Invoke(ctx, "/auxproxyService.GseGrpcSdkService/DescribePlayerSessions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gseGrpcSdkServiceClient) UpdatePlayerSessionCreationPolicy(ctx context.Context, in *UpdatePlayerSessionCreationPolicyRequest, opts ...grpc.CallOption) (*AuxProxyResponse, error) {
	out := new(AuxProxyResponse)
	err := c.cc.Invoke(ctx, "/auxproxyService.GseGrpcSdkService/UpdatePlayerSessionCreationPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gseGrpcSdkServiceClient) TerminateGameServerSession(ctx context.Context, in *TerminateGameServerSessionRequest, opts ...grpc.CallOption) (*AuxProxyResponse, error) {
	out := new(AuxProxyResponse)
	err := c.cc.Invoke(ctx, "/auxproxyService.GseGrpcSdkService/TerminateGameServerSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gseGrpcSdkServiceClient) ProcessEnding(ctx context.Context, in *ProcessEndingRequest, opts ...grpc.CallOption) (*AuxProxyResponse, error) {
	out := new(AuxProxyResponse)
	err := c.cc.Invoke(ctx, "/auxproxyService.GseGrpcSdkService/ProcessEnding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gseGrpcSdkServiceClient) ReportCustomData(ctx context.Context, in *ReportCustomDataRequest, opts ...grpc.CallOption) (*AuxProxyResponse, error) {
	out := new(AuxProxyResponse)
	err := c.cc.Invoke(ctx, "/auxproxyService.GseGrpcSdkService/ReportCustomData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GseGrpcSdkServiceServer is the server API for GseGrpcSdkService service.
type GseGrpcSdkServiceServer interface {
	// 上报游戏进程已经就绪
	ProcessReady(context.Context, *ProcessReadyRequest) (*AuxProxyResponse, error)
	// 激活游戏会话
	ActivateGameServerSession(context.Context, *ActivateGameServerSessionRequest) (*AuxProxyResponse, error)
	// 玩家加入
	AcceptPlayerSession(context.Context, *AcceptPlayerSessionRequest) (*AuxProxyResponse, error)
	// 玩家移除
	RemovePlayerSession(context.Context, *RemovePlayerSessionRequest) (*AuxProxyResponse, error)
	// 获取玩家信息
	DescribePlayerSessions(context.Context, *DescribePlayerSessionsRequest) (*DescribePlayerSessionsResponse, error)
	// 更新玩家加入策略
	UpdatePlayerSessionCreationPolicy(context.Context, *UpdatePlayerSessionCreationPolicyRequest) (*AuxProxyResponse, error)
	// 结束游戏会话
	TerminateGameServerSession(context.Context, *TerminateGameServerSessionRequest) (*AuxProxyResponse, error)
	// 结束进程
	ProcessEnding(context.Context, *ProcessEndingRequest) (*AuxProxyResponse, error)
	// 上报自定义数据
	ReportCustomData(context.Context, *ReportCustomDataRequest) (*AuxProxyResponse, error)
}

// UnimplementedGseGrpcSdkServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGseGrpcSdkServiceServer struct {
}

func (*UnimplementedGseGrpcSdkServiceServer) ProcessReady(context.Context, *ProcessReadyRequest) (*AuxProxyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessReady not implemented")
}
func (*UnimplementedGseGrpcSdkServiceServer) ActivateGameServerSession(context.Context, *ActivateGameServerSessionRequest) (*AuxProxyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivateGameServerSession not implemented")
}
func (*UnimplementedGseGrpcSdkServiceServer) AcceptPlayerSession(context.Context, *AcceptPlayerSessionRequest) (*AuxProxyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcceptPlayerSession not implemented")
}
func (*UnimplementedGseGrpcSdkServiceServer) RemovePlayerSession(context.Context, *RemovePlayerSessionRequest) (*AuxProxyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePlayerSession not implemented")
}
func (*UnimplementedGseGrpcSdkServiceServer) DescribePlayerSessions(context.Context, *DescribePlayerSessionsRequest) (*DescribePlayerSessionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribePlayerSessions not implemented")
}
func (*UnimplementedGseGrpcSdkServiceServer) UpdatePlayerSessionCreationPolicy(context.Context, *UpdatePlayerSessionCreationPolicyRequest) (*AuxProxyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePlayerSessionCreationPolicy not implemented")
}
func (*UnimplementedGseGrpcSdkServiceServer) TerminateGameServerSession(context.Context, *TerminateGameServerSessionRequest) (*AuxProxyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TerminateGameServerSession not implemented")
}
func (*UnimplementedGseGrpcSdkServiceServer) ProcessEnding(context.Context, *ProcessEndingRequest) (*AuxProxyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessEnding not implemented")
}
func (*UnimplementedGseGrpcSdkServiceServer) ReportCustomData(context.Context, *ReportCustomDataRequest) (*AuxProxyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportCustomData not implemented")
}

func RegisterGseGrpcSdkServiceServer(s *grpc.Server, srv GseGrpcSdkServiceServer) {
	s.RegisterService(&_GseGrpcSdkService_serviceDesc, srv)
}

func _GseGrpcSdkService_ProcessReady_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessReadyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GseGrpcSdkServiceServer).ProcessReady(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auxproxyService.GseGrpcSdkService/ProcessReady",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GseGrpcSdkServiceServer).ProcessReady(ctx, req.(*ProcessReadyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GseGrpcSdkService_ActivateGameServerSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateGameServerSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GseGrpcSdkServiceServer).ActivateGameServerSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auxproxyService.GseGrpcSdkService/ActivateGameServerSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GseGrpcSdkServiceServer).ActivateGameServerSession(ctx, req.(*ActivateGameServerSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GseGrpcSdkService_AcceptPlayerSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcceptPlayerSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GseGrpcSdkServiceServer).AcceptPlayerSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auxproxyService.GseGrpcSdkService/AcceptPlayerSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GseGrpcSdkServiceServer).AcceptPlayerSession(ctx, req.(*AcceptPlayerSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GseGrpcSdkService_RemovePlayerSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePlayerSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GseGrpcSdkServiceServer).RemovePlayerSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auxproxyService.GseGrpcSdkService/RemovePlayerSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GseGrpcSdkServiceServer).RemovePlayerSession(ctx, req.(*RemovePlayerSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GseGrpcSdkService_DescribePlayerSessions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribePlayerSessionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GseGrpcSdkServiceServer).DescribePlayerSessions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auxproxyService.GseGrpcSdkService/DescribePlayerSessions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GseGrpcSdkServiceServer).DescribePlayerSessions(ctx, req.(*DescribePlayerSessionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GseGrpcSdkService_UpdatePlayerSessionCreationPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePlayerSessionCreationPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GseGrpcSdkServiceServer).UpdatePlayerSessionCreationPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auxproxyService.GseGrpcSdkService/UpdatePlayerSessionCreationPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GseGrpcSdkServiceServer).UpdatePlayerSessionCreationPolicy(ctx, req.(*UpdatePlayerSessionCreationPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GseGrpcSdkService_TerminateGameServerSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TerminateGameServerSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GseGrpcSdkServiceServer).TerminateGameServerSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auxproxyService.GseGrpcSdkService/TerminateGameServerSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GseGrpcSdkServiceServer).TerminateGameServerSession(ctx, req.(*TerminateGameServerSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GseGrpcSdkService_ProcessEnding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessEndingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GseGrpcSdkServiceServer).ProcessEnding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auxproxyService.GseGrpcSdkService/ProcessEnding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GseGrpcSdkServiceServer).ProcessEnding(ctx, req.(*ProcessEndingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GseGrpcSdkService_ReportCustomData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportCustomDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GseGrpcSdkServiceServer).ReportCustomData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auxproxyService.GseGrpcSdkService/ReportCustomData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GseGrpcSdkServiceServer).ReportCustomData(ctx, req.(*ReportCustomDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GseGrpcSdkService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auxproxyService.GseGrpcSdkService",
	HandlerType: (*GseGrpcSdkServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProcessReady",
			Handler:    _GseGrpcSdkService_ProcessReady_Handler,
		},
		{
			MethodName: "ActivateGameServerSession",
			Handler:    _GseGrpcSdkService_ActivateGameServerSession_Handler,
		},
		{
			MethodName: "AcceptPlayerSession",
			Handler:    _GseGrpcSdkService_AcceptPlayerSession_Handler,
		},
		{
			MethodName: "RemovePlayerSession",
			Handler:    _GseGrpcSdkService_RemovePlayerSession_Handler,
		},
		{
			MethodName: "DescribePlayerSessions",
			Handler:    _GseGrpcSdkService_DescribePlayerSessions_Handler,
		},
		{
			MethodName: "UpdatePlayerSessionCreationPolicy",
			Handler:    _GseGrpcSdkService_UpdatePlayerSessionCreationPolicy_Handler,
		},
		{
			MethodName: "TerminateGameServerSession",
			Handler:    _GseGrpcSdkService_TerminateGameServerSession_Handler,
		},
		{
			MethodName: "ProcessEnding",
			Handler:    _GseGrpcSdkService_ProcessEnding_Handler,
		},
		{
			MethodName: "ReportCustomData",
			Handler:    _GseGrpcSdkService_ReportCustomData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auxproxy_grpc_service.proto",
}
